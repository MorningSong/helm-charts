{{- $ns := include "vm.namespace" . }}
{{- range $name, $config := .Values }}
  {{- if and (kindIs "map" $config) (hasKey $config "route") ($config.enabled) (empty (index $.Subcharts $name)) }}
    {{- $routes := ternary (dict $name $config.route) $config.route (hasKey $config.route "enabled") }}
    {{- range $routeName, $route := $routes }}
      {{- if $route.enabled }}
        {{- $routeName = ternary $routeName (printf "vm%s" $routeName) (or (hasPrefix "vm" $routeName) (not (hasPrefix "vm" $name))) }}
        {{- $appKey := ternary $name (list $name "spec" $routeName) (eq $name $routeName) -}}
        {{- $ctx := dict "helm" $ "appKey" $appKey -}}
        {{- $fullname := include "vm.managed.fullname" $ctx }}
---
apiVersion: {{ $route.apiVersion | default "gateway.networking.k8s.io/v1" }}
kind: {{ $route.kind | default "HTTPRoute" }}
metadata:
  name: {{ $fullname }}
  namespace: {{ $ns }}
  {{- $_ := set $ctx "extraLabels" $route.labels }}
  labels: {{ include "vm.labels" $ctx | nindent 4 }}
  {{- with $route.annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
spec:
  {{- with $route.parentRefs }}
  parentRefs: {{ toYaml . | nindent 4 }}
  {{- end }}
  {{- with $route.hostnames }}
  hostnames: {{ tpl (toYaml .) $ | nindent 4 }}
  {{- end }}
  rules:
    {{- with $route.extraRules }}
    {{- tpl (toYaml .) $ | nindent 4 }}
    {{- end }}
    - backendRefs:
        - name: {{ $fullname }}
          port: {{ $route.portName | default "http" }}
          group: ''
          kind: Service
          weight: 1
      {{- with $route.filters }}
      filters: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $route.matches }}
      matches: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
